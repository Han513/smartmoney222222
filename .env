DATABASE_URI_Solana="postgresql+asyncpg://postgres:henrywork8812601@localhost:5432/dex_db"
DATABASE_URL_SYNC="postgresql://postgres:henrywork8812601@localhost:5432/dex_db"
# DATABASE_URI_Solana="postgresql+asyncpg://postgres:henrywork8812601@localhost:5432/smartmoney2"
# DATABASE_URL_SYNC="postgresql://postgres:henrywork8812601@localhost:5432/smartmoney2"
DATABASE_URI_Ian = 'postgresql+asyncpg://test_pg01_rwuser01:E2#dN4c6d5Mz@127.0.0.1:5005/dex_db'
SOLANA_RPC_URL = 'https://methodical-capable-firefly.solana-mainnet.quiknode.pro/f660ad44a1d7512bb5f81c93144712e8ddc5c2dc' #測試環境URL

# #測試
# DATABASE_URI_Solana="postgresql+asyncpg://test_pg01_rwuser01:E2#dN4c6d5Mz@pgm-3nsj7dpddb23873d.pg.rds.aliyuncs.com:5432/smart_money"
# DATABASE_URL_SYNC="postgresql://test_pg01_rwuser01:E2#dN4c6d5Mz@pgm-3nsj7dpddb23873d.pg.rds.aliyuncs.com:5432/smart_money"
# DATABASE_URI_Ian = "postgresql+asyncpg://test_pg01_rwuser01:E2#dN4c6d5Mz@172.25.183.200:5432/dex_db"
# SOLANA_RPC_URL = "https://methodical-capable-firefly.solana-mainnet.quiknode.pro/f660ad44a1d7512bb5f81c93144712e8ddc5c2dc" #測試環境URL

#生產
# DATABASE_URI_SWAP_BSC="postgresql+asyncpg://moonx:CDFV5B2Ypbwm9ivWT2Ff!!@pgm-gs54q49gj6xls823.pgsql.singapore.rds.aliyuncs.com:5432/moonx"
# DATABASE_URI = 'postgresql+asyncpg://postgres:postgres@127.0.0.1:5005/postgres'
# RPC_URL = 'https://sparkling-convincing-sound.bsc.quiknode.pro/c1a1bbf982479e8ee3d4e73cefc1488164054a1c/' #正式環境URL

# 應用配置
SECRET_KEY=change_this_to_a_secure_random_string
API_KEYS=test_api_key_1,test_api_key_2

# 環境設置
ENVIRONMENT=testing  # development, testing, production

# Solscan API 配置
SOLSCAN_API_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjcmVhdGVkQXQiOjE3NDQxODI3MTA0MzksImVtYWlsIjoid2lubmlmb3J3b3JrQGdtYWlsLmNvbSIsImFjdGlvbiI6InRva2VuLWFwaSIsImFwaVZlcnNpb24iOiJ2MiIsImlhdCI6MTc0NDE4MjcxMH0.T7ofb-SMx2PHAompUQhjBbCNyubwyAZ0IuOp71aMC_M"
SOLSCAN_API_URL=https://pro-api.solscan.io/v2.0

WALLET_SYNC_API_ENDPOINT=http://127.0.0.1:5005/internal/sync_kol_wallets #本地
# WALLET_SYNC_API_ENDPOINT=http://moonx.backend:4200/internal/sync_kol_wallets #測試

# Redis 配置
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Celery 配置
# CELERY_BROKER_URL="redis://127.0.0.1:6379/1"
# CELERY_RESULT_BACKEND="redis://127.0.0.1:6379/1"

CELERY_BROKER_URL="redis://localhost:6379/1"
CELERY_RESULT_BACKEND="redis://localhost:6379/1"

# 數據庫配置
POSTGRES_USER=postgres
POSTGRES_PASSWORD=henrywork8812601
POSTGRES_DB=dex_db
DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}

# POSTGRES_USER="test_pg01_rwuser01"
# POSTGRES_PASSWORD="E2#dN4c6d5Mz"
# POSTGRES_DB=smart_money
# DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgm-3nsj7dpddb23873d.pg.rds.aliyuncs.com:5432/${POSTGRES_DB}

# Kafka 配置
# KAFKA_BOOTSTRAP_SERVERS=localhost:8998
# KAFKA_GROUP_ID=web3_trade_events
# KAFKA_TOPICS=web3_trade_events

KAFKA_BOOTSTRAP_SERVERS=kafka-node1:9592
KAFKA_GROUP_ID=web3_trade_sm_events
KAFKA_TOPICS=web3_trade_sm_events

# 系統限制
MAX_CONCURRENT_REQUESTS=100
MAX_ADDRESSES_PER_REQUEST=300
MAX_WORKER_PROCESSES=5
CACHE_TTL_SECONDS=3600